{
  "openapi": "3.0.0",
  "info": {
    "title": "API Fournisseur CG - Orchestrateur Logistique",
    "version": "3.0.0",
    "description": "# API Fournisseur CG - Orchestrateur Logistique\n\nL'API Fournisseur CG est la **plateforme centrale** qui orchestre l'√©cosyst√®me logistique du Congo. Elle sert de pont intelligent entre les applications clientes et les services backend, offrant une exp√©rience unifi√©e pour la gestion des fournisseurs, commandes, paiements et livraisons.\n\n## üéØ Mission\n\nConnecter les **fournisseurs locaux** aux **clients internationaux** en simplifiant la logistique, les paiements et la communication dans l'√©cosyst√®me e-commerce congolais.\n\n## üèóÔ∏è Architecture\n\n### **Services Int√©gr√©s**\n\n| Service | R√¥le | Statut |\n|---------|------|--------|\n| **Appwrite** | Backend principal (DB, Auth, Storage) | ‚úÖ Int√©gr√© |\n| **Spaark Pay** | Paiements mobiles (MTN Money, Airtel) | ‚úÖ Int√©gr√© |\n| **SMS API** | Notifications et codes OTP | ‚úÖ Int√©gr√© |\n| **MailerSend** | Emails marketing | üîÑ En cours |\n| **SMTP** | Notifications syst√®me | üîÑ En cours |\n\n### **Collections Principales**\n\n- **üìã QUOTES** - Demandes de devis (FC-QMM-XXXX-YYYY)\n- **üìû CONTACTS** - Messages de contact clients\n- **üõçÔ∏è PRODUCTS** - Catalogue multi-plateformes\n- **üì¶ ORDERS** - Commandes (FC-ORD-XXXX-YYYY)\n- **üí≥ PAYMENTS** - Transactions de paiement\n\n## üöÄ Fonctionnalit√©s Cl√©s\n\n### **Paiements Mobiles Intelligents**\n- Support natif **MTN Money** et **Airtel Money**\n- V√©rification automatique des transactions\n- Gestion des webhooks en temps r√©el\n- Retry automatique pour les erreurs temporaires\n\n### **Gestion SMS Avanc√©e**\n- Envoi de codes OTP s√©curis√©s\n- Notifications personnalis√©es\n- Calcul automatique des co√ªts\n- Historique et statistiques d√©taill√©es\n\n### **Collections Auto-Configur√©es**\n- D√©finition d√©clarative des structures\n- Cr√©ation automatique d'attributs et d'index\n- Permissions granulaires par collection\n- Migration et mise √† jour automatiques\n\n## üîê Authentification\n\nL'API supporte **3 m√©thodes d'authentification** :\n\n1. **Bearer Token** - JWT pour les utilisateurs connect√©s\n2. **API Key** - Pour l'authentification service-√†-service\n3. **Basic Auth** - Pour les endpoints administrateur\n\n<details>\n  <summary>Exemples d'utilisation</summary>\n\n  **Authentification Bearer**\n  ```bash\n  curl -H \"Authorization: Bearer YOUR_JWT_TOKEN\" \\\n       https://api.arkelys.cloud/v3/auth/profile\n  ```\n\n  **Authentification API Key**\n  ```bash\n  curl -H \"X-API-Key: YOUR_API_KEY\" \\\n       https://api.arkelys.cloud/v3/appwrite/health\n  ```\n\n  **Paiement Mobile**\n  ```bash\n  curl -X POST https://api.arkelys.cloud/v3/spaark-pay/initiate \\\n       -H \"Authorization: Bearer YOUR_JWT_TOKEN\" \\\n       -H \"Content-Type: application/json\" \\\n       -d '{\"phone\":\"053518256\",\"amount\":150,\"mode\":\"airtel\"}'\n  ```\n</details>\n\n## üåç Sp√©cificit√©s Congo\n\n### **Validation Locale**\n- Num√©ros de t√©l√©phone congolais (0XXXXXXXX)\n- Devise XAF (Franc CFA)\n- Adresses et codes postaux locaux\n- Gestion g√©ographique sp√©cifique\n\n### **Paiements Locaux**\n- **Airtel Money** : 04/05XXXXXXXX\n- **MTN Mobile Money** : 06XXXXXXXX\n- Int√©gration native avec les op√©rateurs locaux\n\n## üìä Monitoring et Logs\n\n### **Health Checks**\n- `/v3` - √âtat g√©n√©ral de l'API\n- `/v3/spaark-pay/health` - Connexion Spaark Pay\n- `/v3/sms/health` - Connexion SMS API\n- `/v3/appwrite/health` - Connexion Appwrite\n\n### **Logs D√©taill√©s**\n- Logs structur√©s pour chaque service\n- Suivi des tentatives de retry\n- M√©triques de performance\n- Alertes automatiques\n\n## üîó Ressources\n\n* [Documentation compl√®te](https://fournisseur.cg/docs)\n* [Interface d'administration](https://admin.fournisseur.cg)\n* [Support technique](mailto:support@fournisseur.cg)\n* [Statut des services](https://status.fournisseur.cg)\n\n## üìù Support Markdown\n\nCette documentation supporte le **Markdown complet** :\n\n> [!tip]\n> **Conseil** : Utilisez les endpoints de test pour v√©rifier la connectivit√© avant les appels de production.\n\n> [!warning]\n> **Attention** : Les paiements mobiles peuvent avoir des d√©lais de traitement variables selon l'op√©rateur.\n\n| Fonctionnalit√© | Disponibilit√© | Documentation |\n|----------------|---------------|---------------|\n| Paiements mobiles | ‚úÖ Production | [Guide complet](#tag/Payment-Processing) |\n| SMS notifications | ‚úÖ Production | [API SMS](#tag/SMS-Notifications) |\n| Gestion collections | ‚úÖ Production | [Appwrite](#tag/Database-Management) |\n| Authentification | ‚úÖ Production | [Auth](#tag/Authentication) |\n\n<details>\n  <summary>Exemples de r√©ponses</summary>\n\n  **Paiement r√©ussi**\n  ```json\n  {\n    \"success\": true,\n    \"data\": {\n      \"paymentId\": 28,\n      \"token\": \"28257ddbaf7a11ef86feac1f6be4442c\",\n      \"composition\": \"*128*128*1159*PIN#\",\n      \"transID\": \"JKUCJDFLIKDGDGD-328\"\n    }\n  }\n  ```\n\n  **SMS envoy√©**\n  ```json\n  {\n    \"success\": true,\n    \"data\": {\n      \"messageId\": \"msg_123\",\n      \"status\": \"sent\",\n      \"to\": \"053518256\",\n      \"cost\": 25\n    }\n  }\n  ```\n</details>",
    "contact": {
      "name": "√âquipe Technique Fournisseur CG",
      "email": "dev@fournisseur.cg",
      "url": "https://fournisseur.cg"
    },
    "license": {
      "name": "Propri√©taire - Fournisseur CG",
      "url": "https://fournisseur.cg/license"
    },
    "termsOfService": "https://fournisseur.cg/terms"
  },
  "servers": [
    {
      "url": "https://api.arkelys.cloud",
      "description": "Production - API officielle"
    },
    {
      "url": "https://staging-api.arkelys.cloud",
      "description": "Staging - Tests et validation"
    },
    {
      "url": "http://localhost:3333",
      "description": "D√©veloppement local"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    },
    {
      "apiKeyAuth": []
    },
    {
      "basicAuth": []
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentification utilisateurs et gestion des tokens JWT"
    },
    {
      "name": "Database Management",
      "description": "Wrapper pour les op√©rations Appwrite (collections, documents, utilisateurs)"
    },
    {
      "name": "Collection Management",
      "description": "Gestion des collections et initialisation des structures de donn√©es"
    },
    {
      "name": "Payment Processing",
      "description": "Int√©gration Spaark Pay - Paiements mobiles (MTN Money, Airtel Money)"
    },
    {
      "name": "SMS Notifications",
      "description": "Envoi de SMS et notifications via API SMS"
    },
    {
      "name": "Email Services",
      "description": "MailerSend (marketing) et SMTP (notifications syst√®me)"
    },
    {
      "name": "User Management",
      "description": "Gestion des utilisateurs (visiteurs, clients, professionnels, admins)"
    },
    {
      "name": "Webhooks",
      "description": "Endpoints pour webhooks entrants (Spark Pay, partenaires transport)"
    },
    {
      "name": "Analytics",
      "description": "M√©triques, rapports et donn√©es analytiques de la plateforme"
    }
  ],
  "paths": {
    "/v3/health": {
      "get": {
        "summary": "route",
        "description": "\n\n __ - ****",
        "parameters": [],
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": []
      }
    },
    "/v3": {
      "get": {
        "summary": "route",
        "description": "\n\n __ - ****",
        "parameters": [],
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": []
      }
    },
    "/v3/auth/register": {
      "post": {
        "summary": "Register new user (register)",
        "description": "Returns **201** (Created) as **text/plain**\n\n _app/controllers/auth_controller.ts_ - **register**",
        "parameters": [],
        "tags": [
          "AUTH"
        ],
        "responses": {
          "201": {
            "content": {
              "text/plain": {
                "example": "{\"success\": true, \"message\": \"Compte cr√©√© avec succ√®s\", \"data\": {\"user\": {...}, \"token\": \"...\"}}"
              }
            },
            "description": "Returns **201** (Created) as **text/plain**"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": "Donn√©es invalides"
                  }
                },
                "example": {
                  "error": "Donn√©es invalides"
                }
              }
            },
            "description": "Returns **400** (Bad Request) as **application/json**"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": "Email d√©j√† utilis√©"
                  }
                },
                "example": {
                  "error": "Email d√©j√† utilis√©"
                }
              }
            },
            "description": "Returns **409** (Conflict) as **application/json**"
          }
        },
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": "John Doe",
                  "email": "test@example.com",
                  "password": "password123"
                }
              },
              "example": {
                "fullName": "John Doe",
                "email": "test@example.com",
                "password": "password123"
              }
            }
          }
        }
      }
    },
    "/v3/auth/login": {
      "post": {
        "summary": "User login (login)",
        "description": "Authenticate user and generate token\n\n _app/controllers/auth_controller.ts_ - **login**",
        "parameters": [],
        "tags": [
          "AUTH"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{\"success\": true, \"message\": \"Connexion r√©ussie\", \"data\": {\"user\": {...}, \"token\": \"...\"}}"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": "Identifiants invalides"
                  }
                },
                "example": {
                  "error": "Identifiants invalides"
                }
              }
            },
            "description": "Returns **401** (Unauthorized) as **application/json**"
          }
        },
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": "test@example.com",
                  "password": "password123"
                }
              },
              "example": {
                "email": "test@example.com",
                "password": "password123"
              }
            }
          }
        }
      }
    },
    "/v3/auth/get-token": {
      "post": {
        "summary": "Get clear token (for testing) (getToken)",
        "description": "Temporary route to get complete token\n\n _app/controllers/auth_controller.ts_ - **getToken**",
        "parameters": [],
        "tags": [
          "AUTH"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": "Bearer ..."
                  }
                },
                "example": {
                  "token": "Bearer ..."
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          }
        },
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": "test@example.com",
                  "password": "password123"
                }
              },
              "example": {
                "email": "test@example.com",
                "password": "password123"
              }
            }
          }
        }
      }
    },
    "/v3/auth/logout": {
      "post": {
        "summary": "User logout (logout)",
        "description": "Invalidate current access token\n\n _app/controllers/auth_controller.ts_ - **logout**",
        "parameters": [],
        "tags": [
          "AUTH"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": true,
                    "message": "D√©connexion r√©ussie"
                  }
                },
                "example": {
                  "success": true,
                  "message": "D√©connexion r√©ussie"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": "Token invalide"
                  }
                },
                "example": {
                  "error": "Token invalide"
                }
              }
            },
            "description": "Returns **401** (Unauthorized) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/auth/profile": {
      "get": {
        "summary": "User profile (profile)",
        "description": "Returns **200** (OK) as **text/plain**\n\n _app/controllers/auth_controller.ts_ - **profile**",
        "parameters": [],
        "tags": [
          "AUTH"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{\"success\": true, \"data\": {\"user\": {...}}}"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": "Non authentifi√©"
                  }
                },
                "example": {
                  "error": "Non authentifi√©"
                }
              }
            },
            "description": "Returns **401** (Unauthorized) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/auth/refresh-token": {
      "post": {
        "summary": "Refresh token (refreshToken)",
        "description": "Generate new access token\n\n _app/controllers/auth_controller.ts_ - **refreshToken**",
        "parameters": [],
        "tags": [
          "AUTH"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": true,
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": "..."
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "token": "..."
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": "Token invalide"
                  }
                },
                "example": {
                  "error": "Token invalide"
                }
              }
            },
            "description": "Returns **401** (Unauthorized) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/sms/health": {
      "get": {
        "summary": "SMS connection health check (health)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/sms_controller.ts_ - **health**",
        "parameters": [],
        "tags": [
          "SMS"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": "healthy",
                    "message": "Configuration SMS MTN valid√©e"
                  }
                },
                "example": {
                  "status": "healthy",
                  "message": "Configuration SMS MTN valid√©e"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": "unhealthy",
                    "message": "Erreur de configuration"
                  }
                },
                "example": {
                  "status": "unhealthy",
                  "message": "Erreur de configuration"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/sms/send": {
      "post": {
        "summary": "Send SMS (MTN Official API) (sendSms)",
        "description": "Send SMS using official MTN API endpoint\n\n _app/controllers/sms_controller.ts_ - **sendSms**",
        "parameters": [],
        "tags": [
          "SMS"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messageId": "msg_123",
                    "status": "sent",
                    "to": "242053518256",
                    "cost": 25
                  }
                },
                "example": {
                  "messageId": "msg_123",
                  "status": "sent",
                  "to": "242053518256",
                  "cost": 25
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": "Param√®tres invalides",
                    "details": "string"
                  }
                },
                "example": {
                  "error": "Param√®tres invalides",
                  "details": "string"
                }
              }
            },
            "description": "Returns **400** (Bad Request) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": "Erreur lors de l'envoi",
                    "details": "string"
                  }
                },
                "example": {
                  "error": "Erreur lors de l'envoi",
                  "details": "string"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "to": "242053518256",
                  "message": "Votre code de v√©rification est 534444",
                  "from": "Fourniseur"
                }
              },
              "example": {
                "to": "242053518256",
                "message": "Votre code de v√©rification est 534444",
                "from": "Fourniseur"
              }
            }
          }
        }
      }
    },
    "/v3/sms/status/{messageId}": {
      "get": {
        "summary": "Get SMS status (MTN Official API) (getSmsStatus)",
        "description": "Returns **200** (OK) as **text/plain**\n\n _app/controllers/sms_controller.ts_ - **getSmsStatus**",
        "parameters": [
          {
            "in": "path",
            "name": "messageId",
            "description": "ID du message SMS retourn√© lors de l'envoi",
            "schema": {
              "example": null,
              "type": "string"
            },
            "required": false
          }
        ],
        "tags": [
          "SMS"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{\"messageId\": \"msg_123\", \"status\": \"delivered\", \"to\": \"242053518256\", \"statusDetails\": {...}}"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": "SMS non trouv√©"
                  }
                },
                "example": {
                  "error": "SMS non trouv√©"
                }
              }
            },
            "description": "Returns **404** (Not Found) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": "Erreur lors de la r√©cup√©ration",
                    "details": "string"
                  }
                },
                "example": {
                  "error": "Erreur lors de la r√©cup√©ration",
                  "details": "string"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/sms/status-codes": {
      "get": {
        "summary": "Get MTN status codes (getStatusCodes)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/sms_controller.ts_ - **getStatusCodes**",
        "parameters": [],
        "tags": [
          "SMS"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCodes": {
                      "type": "object",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "code": "1",
                            "description": "Livr√© au t√©l√©phone",
                            "category": "success"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "statusCodes": [
                    {
                      "code": "1",
                      "description": "Livr√© au t√©l√©phone",
                      "category": "success"
                    }
                  ]
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/sms/calculate-cost": {
      "post": {
        "summary": "Calculate SMS cost (MTN Rules) (calculateSmsCost)",
        "description": "Calculate SMS cost based on MTN pricing rules\n\n _app/controllers/sms_controller.ts_ - **calculateSmsCost**",
        "parameters": [],
        "tags": [
          "SMS"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cost": 25,
                    "length": 45,
                    "smsCount": 1,
                    "type": "GSM"
                  }
                },
                "example": {
                  "cost": 25,
                  "length": 45,
                  "smsCount": 1,
                  "type": "GSM"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": "Message requis"
                  }
                },
                "example": {
                  "error": "Message requis"
                }
              }
            },
            "description": "Returns **400** (Bad Request) as **application/json**"
          }
        },
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": "Votre code de v√©rification est 123456"
                }
              },
              "example": {
                "message": "Votre code de v√©rification est 123456"
              }
            }
          }
        }
      }
    },
    "/v3/pawapay/availability": {
      "get": {
        "summary": "PawaPay availability (availability)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/pawapay_controller.ts_ - **availability**",
        "parameters": [],
        "tags": [
          "PAWAPAY"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": true,
                    "data": {
                      "type": "object",
                      "properties": {
                        "country": "COG",
                        "available": true
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "country": "COG",
                    "available": true
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": false,
                    "error": "Availability fetch failed",
                    "details": "Unknown error"
                  }
                },
                "example": {
                  "success": false,
                  "error": "Availability fetch failed",
                  "details": "Unknown error"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/pawapay/providers": {
      "get": {
        "summary": "PawaPay providers per country (listProviders)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/pawapay_controller.ts_ - **listProviders**",
        "parameters": [],
        "tags": [
          "PAWAPAY"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": true,
                    "data": {
                      "type": "object",
                      "properties": {
                        "country": "COG",
                        "available": true
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "country": "COG",
                    "available": true
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": false,
                    "error": "Providers fetch failed",
                    "details": "Unknown error"
                  }
                },
                "example": {
                  "success": false,
                  "error": "Providers fetch failed",
                  "details": "Unknown error"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/pawapay/active-conf": {
      "get": {
        "summary": "PawaPay active configuration (getActiveConfiguration)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/pawapay_controller.ts_ - **getActiveConfiguration**",
        "parameters": [],
        "tags": [
          "PAWAPAY"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": true,
                    "data": {
                      "type": "object",
                      "properties": {
                        "country": "COG",
                        "available": true
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "country": "COG",
                    "available": true
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": false,
                    "error": "Active configuration fetch failed",
                    "details": "Unknown error"
                  }
                },
                "example": {
                  "success": false,
                  "error": "Active configuration fetch failed",
                  "details": "Unknown error"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/pawapay/deposits/request": {
      "post": {
        "summary": "PawaPay request deposit (requestDeposit)",
        "description": "Request a deposit using PawaPay v2 payload\n\n _app/controllers/pawapay_controller.ts_ - **requestDeposit**",
        "parameters": [],
        "tags": [
          "PAWAPAY"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": true,
                    "data": {
                      "type": "object",
                      "properties": {
                        "depositId": "uuid",
                        "amount": "15",
                        "currency": "XAF",
                        "payer": {
                          "type": "object",
                          "properties": {
                            "type": "MMO",
                            "accountDetails": {
                              "type": "object",
                              "properties": {
                                "provider": "MTN_MOMO_COG",
                                "phoneNumber": "24206XXXXXX"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "depositId": "uuid",
                    "amount": "15",
                    "currency": "XAF",
                    "payer": {
                      "type": "MMO",
                      "accountDetails": {
                        "provider": "MTN_MOMO_COG",
                        "phoneNumber": "24206XXXXXX"
                      }
                    }
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": false,
                    "error": "Deposit request failed",
                    "details": "Unknown error"
                  }
                },
                "example": {
                  "success": false,
                  "error": "Deposit request failed",
                  "details": "Unknown error"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/pawapay/deposits/{depositId}/status": {
      "get": {
        "summary": "PawaPay check deposit status (checkDepositStatus)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/pawapay_controller.ts_ - **checkDepositStatus**",
        "parameters": [
          {
            "in": "path",
            "name": "depositId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "PAWAPAY"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": true,
                    "data": {
                      "type": "object",
                      "properties": {
                        "depositId": "uuid",
                        "amount": "15",
                        "currency": "XAF",
                        "payer": {
                          "type": "object",
                          "properties": {
                            "type": "MMO",
                            "accountDetails": {
                              "type": "object",
                              "properties": {
                                "provider": "MTN_MOMO_COG",
                                "phoneNumber": "24206XXXXXX"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "depositId": "uuid",
                    "amount": "15",
                    "currency": "XAF",
                    "payer": {
                      "type": "MMO",
                      "accountDetails": {
                        "provider": "MTN_MOMO_COG",
                        "phoneNumber": "24206XXXXXX"
                      }
                    }
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": false,
                    "error": "Deposit request failed",
                    "details": "Unknown error"
                  }
                },
                "example": {
                  "success": false,
                  "error": "Deposit request failed",
                  "details": "Unknown error"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/pawapay/payouts/request": {
      "post": {
        "summary": "PawaPay request payout (requestPayout)",
        "description": "Request a payout using PawaPay v2 payload\n\n _app/controllers/pawapay_controller.ts_ - **requestPayout**",
        "parameters": [],
        "tags": [
          "PAWAPAY"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": true,
                    "data": {
                      "type": "object",
                      "properties": {
                        "payoutId": "uuid",
                        "amount": "15",
                        "currency": "XAF",
                        "recipient": {
                          "type": "object",
                          "properties": {
                            "type": "MMO",
                            "accountDetails": {
                              "type": "object",
                              "properties": {
                                "provider": "MTN_MOMO_COG",
                                "phoneNumber": "24206XXXXXX"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "payoutId": "uuid",
                    "amount": "15",
                    "currency": "XAF",
                    "recipient": {
                      "type": "MMO",
                      "accountDetails": {
                        "provider": "MTN_MOMO_COG",
                        "phoneNumber": "24206XXXXXX"
                      }
                    }
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": false,
                    "error": "Payout request failed",
                    "details": "Unknown error"
                  }
                },
                "example": {
                  "success": false,
                  "error": "Payout request failed",
                  "details": "Unknown error"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/pawapay/payouts/{payoutId}/status": {
      "get": {
        "summary": "PawaPay check payout status (checkPayoutStatus)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/pawapay_controller.ts_ - **checkPayoutStatus**",
        "parameters": [
          {
            "in": "path",
            "name": "payoutId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "PAWAPAY"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": true,
                    "data": {
                      "type": "object",
                      "properties": {
                        "payoutId": "uuid",
                        "amount": "15",
                        "currency": "XAF",
                        "recipient": {
                          "type": "object",
                          "properties": {
                            "type": "MMO",
                            "accountDetails": {
                              "type": "object",
                              "properties": {
                                "provider": "MTN_MOMO_COG",
                                "phoneNumber": "24206XXXXXX"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "payoutId": "uuid",
                    "amount": "15",
                    "currency": "XAF",
                    "recipient": {
                      "type": "MMO",
                      "accountDetails": {
                        "provider": "MTN_MOMO_COG",
                        "phoneNumber": "24206XXXXXX"
                      }
                    }
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": false,
                    "error": "Payout request failed",
                    "details": "Unknown error"
                  }
                },
                "example": {
                  "success": false,
                  "error": "Payout request failed",
                  "details": "Unknown error"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/pawapay/refunds/request": {
      "post": {
        "summary": "PawaPay request refund (requestRefund)",
        "description": "Request a refund using PawaPay v2 payload\n\n _app/controllers/pawapay_controller.ts_ - **requestRefund**",
        "parameters": [],
        "tags": [
          "PAWAPAY"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": true,
                    "data": {
                      "type": "object",
                      "properties": {
                        "refundId": "uuid",
                        "amount": "15",
                        "currency": "XAF",
                        "recipient": {
                          "type": "object",
                          "properties": {
                            "type": "MMO",
                            "accountDetails": {
                              "type": "object",
                              "properties": {
                                "provider": "MTN_MOMO_COG",
                                "phoneNumber": "24206XXXXXX"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "refundId": "uuid",
                    "amount": "15",
                    "currency": "XAF",
                    "recipient": {
                      "type": "MMO",
                      "accountDetails": {
                        "provider": "MTN_MOMO_COG",
                        "phoneNumber": "24206XXXXXX"
                      }
                    }
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": false,
                    "error": "Refund request failed",
                    "details": "Unknown error"
                  }
                },
                "example": {
                  "success": false,
                  "error": "Refund request failed",
                  "details": "Unknown error"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/pawapay/refunds/{refundId}/status": {
      "get": {
        "summary": "PawaPay check refund status (checkRefundStatus)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/pawapay_controller.ts_ - **checkRefundStatus**",
        "parameters": [
          {
            "in": "path",
            "name": "refundId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "PAWAPAY"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": true,
                    "data": {
                      "type": "object",
                      "properties": {
                        "refundId": "uuid",
                        "amount": "15",
                        "currency": "XAF",
                        "recipient": {
                          "type": "object",
                          "properties": {
                            "type": "MMO",
                            "accountDetails": {
                              "type": "object",
                              "properties": {
                                "provider": "MTN_MOMO_COG",
                                "phoneNumber": "24206XXXXXX"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "refundId": "uuid",
                    "amount": "15",
                    "currency": "XAF",
                    "recipient": {
                      "type": "MMO",
                      "accountDetails": {
                        "provider": "MTN_MOMO_COG",
                        "phoneNumber": "24206XXXXXX"
                      }
                    }
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": false,
                    "error": "Refund request failed",
                    "details": "Unknown error"
                  }
                },
                "example": {
                  "success": false,
                  "error": "Refund request failed",
                  "details": "Unknown error"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/pawapay/callbacks/deposits": {
      "post": {
        "summary": "PawaPay deposit callback (depositCallback)",
        "description": "Handle deposit callback from PawaPay\n\n _app/controllers/pawapay_controller.ts_ - **depositCallback**",
        "parameters": [],
        "tags": [
          "PAWAPAY"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "received": true
                  }
                },
                "example": {
                  "received": true
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": false,
                    "error": "Deposit callback failed",
                    "details": "Unknown error"
                  }
                },
                "example": {
                  "success": false,
                  "error": "Deposit callback failed",
                  "details": "Unknown error"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/pawapay/callbacks/payouts": {
      "post": {
        "summary": "PawaPay payout callback (payoutCallback)",
        "description": "Handle payout callback from PawaPay\n\n _app/controllers/pawapay_controller.ts_ - **payoutCallback**",
        "parameters": [],
        "tags": [
          "PAWAPAY"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "received": true
                  }
                },
                "example": {
                  "received": true
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": false,
                    "error": "Payout callback failed",
                    "details": "Unknown error"
                  }
                },
                "example": {
                  "success": false,
                  "error": "Payout callback failed",
                  "details": "Unknown error"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/v3/pawapay/callbacks/refunds": {
      "post": {
        "summary": "PawaPay refund callback (refundCallback)",
        "description": "Handle refund callback from PawaPay\n\n _app/controllers/pawapay_controller.ts_ - **refundCallback**",
        "parameters": [],
        "tags": [
          "PAWAPAY"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "received": true
                  }
                },
                "example": {
                  "received": true
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": false,
                    "error": "Refund callback failed",
                    "details": "Unknown error"
                  }
                },
                "example": {
                  "success": false,
                  "error": "Refund callback failed",
                  "details": "Unknown error"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtenu depuis /v3/auth/login"
      },
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "Cl√© API pour l'authentification service-√†-service"
      },
      "basicAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "Authentification basique pour les endpoints admin"
      }
    }
  }
}