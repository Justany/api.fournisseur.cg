# Configuration Scalar Galaxy pour API Fournisseur CG
# Généré automatiquement le 2025-10-04T23:59:27.313Z
# Combine AutoSwagger (routes) + Configuration Scalar (UI/UX)

openapi: 3.0.0
info:
  title: API Fournisseur CG - Orchestrateur Logistique
  version: 3.0.0
  description: >-
    API REST centrale pour l'écosystème logistique du Congo. Orchestre les services backend pour une expérience
    e-commerce unifiée.


    ## Mission

    Connecter fournisseurs locaux et clients internationaux via une plateforme spécialisée pour l'écosystème congolais.


    ## Services Intégrés

    - **Appwrite** - Backend principal (DB, Auth, Storage)

    - **Spaark Pay** - Paiements mobiles (MTN Money, Airtel Money)

    - **SMS API** - Notifications et codes OTP

    - **MailerSend** - Emails marketing

    - **SMTP** - Notifications système


    ## Collections Principales

    - **QUOTES** - Demandes de devis

    - **CONTACTS** - Messages de contact clients

    - **PRODUCTS** - Catalogue multi-plateformes

    - **ORDERS** - Commandes (FC-ORD-XXXX-YYYY)

    - **PAYMENTS** - Transactions de paiement


    ## Fonctionnalités Clés

    - **Paiements Mobiles** : Support natif MTN Money et Airtel Money

    - **SMS Avancé** : Codes OTP sécurisés et notifications personnalisées

    - **Collections Auto-Configurées** : Création automatique d'attributs et d'index


    ## Authentification

    1. **Bearer Token** - JWT pour utilisateurs connectés

    2. **API Key** - Authentification service-à-service

    3. **Basic Auth** - Endpoints administrateur


    ## Spécificités Congo

    - Numéros congolais : +243 format

    - Devise : XAF (Franc CFA)

    - Opérateurs : MTN Money (053/054), Airtel Money (097/098)


    ## Health Checks

    - /v3 - État général

    - /v3/spaark-pay/health - Connexion Spaark Pay

    - /v3/sms/health - Connexion SMS API

    - /v3/appwrite/health - Connexion Appwrite


    ## Ressources

    - Documentation : https://docs.fournisseur.cg

    - Support : dev@fournisseur.cg

    - Status : https://status.fournisseur.cg
  contact:
    name: Équipe Technique Fournisseur CG
    email: dev@fournisseur.cg
    url: https://fournisseur.cg
  license:
    name: Propriétaire - Fournisseur CG
    url: https://fournisseur.cg/license
  termsOfService: https://fournisseur.cg/terms
servers:
  - url: https://api.arkelys.cloud
    description: Production - API officielle
  - url: https://staging-api.arkelys.cloud
    description: Staging - Tests et validation
  - url: http://localhost:3333
    description: Développement local
security:
  - bearerAuth: []
  - apiKeyAuth: []
  - basicAuth: []
components:
  schemas: {}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtenu depuis /v3/auth/login
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: Clé API pour l'authentification service-à-service
    basicAuth:
      type: http
      scheme: basic
      description: Authentification basique pour les endpoints admin
tags:
  - name: Authentication
    description: Authentification utilisateurs et gestion des tokens JWT
  - name: Payment Processing
    description: Intégration Spaark Pay - Paiements mobiles (MTN Money, Airtel Money)
  - name: SMS Notifications
    description: Envoi de SMS et notifications via API SMS
  - name: Email Services
    description: MailerSend (marketing) et SMTP (notifications système)
paths:
  /v3/health:
    get:
      summary: route
      description: |2-


         __ - ****
      parameters: []
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json: {}
      security: []
  /v3:
    get:
      summary: route
      description: |2-


         __ - ****
      parameters: []
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json: {}
      security: []
  /v3/auth/register:
    post:
      summary: Register new user (register)
      description: |-
        Returns **201** (Created) as **text/plain**

         _app/controllers/auth_controller.ts_ - **register**
      parameters: []
      tags:
        - AUTH
      responses:
        '201':
          content:
            text/plain:
              example: '{"success": true, "message": "Compte créé avec succès", "data": {"user": {...}, "token": "..."}}'
          description: Returns **201** (Created) as **text/plain**
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: Données invalides
              example:
                error: Données invalides
          description: Returns **400** (Bad Request) as **application/json**
        '409':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: Email déjà utilisé
              example:
                error: Email déjà utilisé
          description: Returns **409** (Conflict) as **application/json**
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName: John Doe
                email: test@example.com
                password: password123
            example:
              fullName: John Doe
              email: test@example.com
              password: password123
  /v3/auth/login:
    post:
      summary: User login (login)
      description: |-
        Authenticate user and generate token

         _app/controllers/auth_controller.ts_ - **login**
      parameters: []
      tags:
        - AUTH
      responses:
        '200':
          content:
            text/plain:
              example: '{"success": true, "message": "Connexion réussie", "data": {"user": {...}, "token": "..."}}'
          description: Returns **200** (OK) as **text/plain**
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: Identifiants invalides
              example:
                error: Identifiants invalides
          description: Returns **401** (Unauthorized) as **application/json**
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email: test@example.com
                password: password123
            example:
              email: test@example.com
              password: password123
  /v3/auth/get-token:
    post:
      summary: Get clear token (for testing) (getToken)
      description: |-
        Temporary route to get complete token

         _app/controllers/auth_controller.ts_ - **getToken**
      parameters: []
      tags:
        - AUTH
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: Bearer ...
              example:
                token: Bearer ...
          description: Returns **200** (OK) as **application/json**
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email: test@example.com
                password: password123
            example:
              email: test@example.com
              password: password123
  /v3/auth/logout:
    post:
      summary: User logout (logout)
      description: |-
        Invalidate current access token

         _app/controllers/auth_controller.ts_ - **logout**
      parameters: []
      tags:
        - AUTH
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: true
                  message: Déconnexion réussie
              example:
                success: true
                message: Déconnexion réussie
          description: Returns **200** (OK) as **application/json**
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: Token invalide
              example:
                error: Token invalide
          description: Returns **401** (Unauthorized) as **application/json**
      security: []
  /v3/auth/profile:
    get:
      summary: User profile (profile)
      description: |-
        Returns **200** (OK) as **text/plain**

         _app/controllers/auth_controller.ts_ - **profile**
      parameters: []
      tags:
        - AUTH
      responses:
        '200':
          content:
            text/plain:
              example: '{"success": true, "data": {"user": {...}}}'
          description: Returns **200** (OK) as **text/plain**
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: Non authentifié
              example:
                error: Non authentifié
          description: Returns **401** (Unauthorized) as **application/json**
      security: []
  /v3/auth/refresh-token:
    post:
      summary: Refresh token (refreshToken)
      description: |-
        Generate new access token

         _app/controllers/auth_controller.ts_ - **refreshToken**
      parameters: []
      tags:
        - AUTH
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: true
                  data:
                    type: object
                    properties:
                      token: ...
              example:
                success: true
                data:
                  token: ...
          description: Returns **200** (OK) as **application/json**
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: Token invalide
              example:
                error: Token invalide
          description: Returns **401** (Unauthorized) as **application/json**
      security: []
  /v3/sms/health:
    get:
      summary: SMS connection health check (health)
      description: |-
        Returns **200** (OK) as **application/json**

         _app/controllers/sms_controller.ts_ - **health**
      parameters: []
      tags:
        - SMS
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: healthy
                  message: Configuration SMS MTN validée
              example:
                status: healthy
                message: Configuration SMS MTN validée
          description: Returns **200** (OK) as **application/json**
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: unhealthy
                  message: Erreur de configuration
              example:
                status: unhealthy
                message: Erreur de configuration
          description: Returns **500** (Internal Server Error) as **application/json**
      security: []
  /v3/sms/send:
    post:
      summary: Send SMS (MTN Official API) (sendSms)
      description: |-
        Send SMS using official MTN API endpoint

         _app/controllers/sms_controller.ts_ - **sendSms**
      parameters: []
      tags:
        - SMS
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  messageId: msg_123
                  status: sent
                  to: '242053518256'
                  cost: 25
              example:
                messageId: msg_123
                status: sent
                to: '242053518256'
                cost: 25
          description: Returns **200** (OK) as **application/json**
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: Paramètres invalides
                  details: string
              example:
                error: Paramètres invalides
                details: string
          description: Returns **400** (Bad Request) as **application/json**
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: Erreur lors de l'envoi
                  details: string
              example:
                error: Erreur lors de l'envoi
                details: string
          description: Returns **500** (Internal Server Error) as **application/json**
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                to: '242053518256'
                message: Votre code de vérification est 534444
                from: Fourniseur
            example:
              to: '242053518256'
              message: Votre code de vérification est 534444
              from: Fourniseur
  /v3/sms/status/{messageId}:
    get:
      summary: Get SMS status (MTN Official API) (getSmsStatus)
      description: |-
        Returns **200** (OK) as **text/plain**

         _app/controllers/sms_controller.ts_ - **getSmsStatus**
      parameters:
        - in: path
          name: messageId
          description: ID du message SMS retourné lors de l'envoi
          schema:
            example: null
            type: string
          required: false
      tags:
        - SMS
      responses:
        '200':
          content:
            text/plain:
              example: '{"messageId": "msg_123", "status": "delivered", "to": "242053518256", "statusDetails": {...}}'
          description: Returns **200** (OK) as **text/plain**
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: SMS non trouvé
              example:
                error: SMS non trouvé
          description: Returns **404** (Not Found) as **application/json**
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: Erreur lors de la récupération
                  details: string
              example:
                error: Erreur lors de la récupération
                details: string
          description: Returns **500** (Internal Server Error) as **application/json**
      security: []
  /v3/sms/status-codes:
    get:
      summary: Get MTN status codes (getStatusCodes)
      description: |-
        Returns **200** (OK) as **application/json**

         _app/controllers/sms_controller.ts_ - **getStatusCodes**
      parameters: []
      tags:
        - SMS
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCodes:
                    type: object
                    properties:
                      '0':
                        type: object
                        properties:
                          code: '1'
                          description: Livré au téléphone
                          category: success
              example:
                statusCodes:
                  - code: '1'
                    description: Livré au téléphone
                    category: success
          description: Returns **200** (OK) as **application/json**
      security: []
  /v3/sms/calculate-cost:
    post:
      summary: Calculate SMS cost (MTN Rules) (calculateSmsCost)
      description: |-
        Calculate SMS cost based on MTN pricing rules

         _app/controllers/sms_controller.ts_ - **calculateSmsCost**
      parameters: []
      tags:
        - SMS
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  cost: 25
                  length: 45
                  smsCount: 1
                  type: GSM
              example:
                cost: 25
                length: 45
                smsCount: 1
                type: GSM
          description: Returns **200** (OK) as **application/json**
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: Message requis
              example:
                error: Message requis
          description: Returns **400** (Bad Request) as **application/json**
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message: Votre code de vérification est 123456
            example:
              message: Votre code de vérification est 123456
  /v3/pawapay/availability:
    get:
      summary: Availability (availability)
      description: |-
        Returns **200** (OK) as **application/json**

         _app/controllers/pawapay_controller.ts_ - **availability**
      parameters: []
      tags:
        - PAWAPAY
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: true
                  data:
                    type: object
                    properties:
                      country: COG
                      available: true
              example:
                success: true
                data:
                  country: COG
                  available: true
          description: Returns **200** (OK) as **application/json**
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: false
                  error: Availability fetch failed
                  details: Unknown error
              example:
                success: false
                error: Availability fetch failed
                details: Unknown error
          description: Returns **500** (Internal Server Error) as **application/json**
      security: []
  /v3/pawapay/providers:
    get:
      summary: Providers per country (listProviders)
      description: |-
        Returns **200** (OK) as **application/json**

         _app/controllers/pawapay_controller.ts_ - **listProviders**
      parameters: []
      tags:
        - PAWAPAY
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: true
                  data:
                    type: object
                    properties:
                      country: COG
                      available: true
              example:
                success: true
                data:
                  country: COG
                  available: true
          description: Returns **200** (OK) as **application/json**
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: false
                  error: Providers fetch failed
                  details: Unknown error
              example:
                success: false
                error: Providers fetch failed
                details: Unknown error
          description: Returns **500** (Internal Server Error) as **application/json**
      security: []
  /v3/pawapay/active-conf:
    get:
      summary: Active configuration (getActiveConfiguration)
      description: |-
        Returns **200** (OK) as **text/plain**

         _app/controllers/pawapay_controller.ts_ - **getActiveConfiguration**
      parameters: []
      tags:
        - PAWAPAY
      responses:
        '200':
          content:
            text/plain:
              example: '{'
          description: Returns **200** (OK) as **text/plain**
        '401':
          content:
            text/plain:
              example: '{'
          description: Returns **401** (Unauthorized) as **text/plain**
        '403':
          content:
            text/plain:
              example: '{'
          description: Returns **403** (Forbidden) as **text/plain**
        '500':
          content:
            text/plain:
              example: '{'
          description: Returns **500** (Internal Server Error) as **text/plain**
      security: []
  /v3/pawapay/deposits/request:
    post:
      summary: Request deposit (requestDeposit)
      description: |-
        Request a deposit using PawaPay v2 payload

         _app/controllers/pawapay_controller.ts_ - **requestDeposit**
      parameters: []
      tags:
        - PAWAPAY
      responses:
        '200':
          content:
            text/plain:
              example: '{'
          description: Returns **200** (OK) as **text/plain**
        '400':
          content:
            text/plain:
              example: '{'
          description: Returns **400** (Bad Request) as **text/plain**
        '401':
          content:
            text/plain:
              example: '{'
          description: Returns **401** (Unauthorized) as **text/plain**
        '403':
          content:
            text/plain:
              example: '{'
          description: Returns **403** (Forbidden) as **text/plain**
        '500':
          content:
            text/plain:
              example: '{'
          description: Returns **500** (Internal Server Error) as **text/plain**
      security: []
  /v3/pawapay/deposits/{depositId}/status:
    get:
      summary: Check deposit status (checkDepositStatus)
      description: |-
        Returns **200** (OK) as **text/plain**

         _app/controllers/pawapay_controller.ts_ - **checkDepositStatus**
      parameters:
        - in: path
          name: depositId
          schema:
            type: string
          required: true
      tags:
        - PAWAPAY
      responses:
        '200':
          content:
            text/plain:
              example: '{'
          description: Returns **200** (OK) as **text/plain**
        '401':
          content:
            text/plain:
              example: '{'
          description: Returns **401** (Unauthorized) as **text/plain**
        '403':
          content:
            text/plain:
              example: '{'
          description: Returns **403** (Forbidden) as **text/plain**
        '500':
          content:
            text/plain:
              example: '{'
          description: Returns **500** (Internal Server Error) as **text/plain**
      security: []
  /v3/pawapay/payouts/request:
    post:
      summary: Request payout (requestPayout)
      description: |-
        Request a payout using PawaPay v2 payload

         _app/controllers/pawapay_controller.ts_ - **requestPayout**
      parameters: []
      tags:
        - PAWAPAY
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: true
                  data:
                    type: object
                    properties:
                      payoutId: uuid
                      amount: '15'
                      currency: XAF
                      recipient:
                        type: object
                        properties:
                          type: MMO
                          accountDetails:
                            type: object
                            properties:
                              provider: MTN_MOMO_COG
                              phoneNumber: 24206XXXXXX
              example:
                success: true
                data:
                  payoutId: uuid
                  amount: '15'
                  currency: XAF
                  recipient:
                    type: MMO
                    accountDetails:
                      provider: MTN_MOMO_COG
                      phoneNumber: 24206XXXXXX
          description: Returns **200** (OK) as **application/json**
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: false
                  error: Payout request failed
                  details: Unknown error
              example:
                success: false
                error: Payout request failed
                details: Unknown error
          description: Returns **500** (Internal Server Error) as **application/json**
      security: []
  /v3/pawapay/payouts/{payoutId}/status:
    get:
      summary: Check payout status (checkPayoutStatus)
      description: |-
        Returns **200** (OK) as **application/json**

         _app/controllers/pawapay_controller.ts_ - **checkPayoutStatus**
      parameters:
        - in: path
          name: payoutId
          schema:
            type: string
          required: true
      tags:
        - PAWAPAY
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: true
                  data:
                    type: object
                    properties:
                      payoutId: uuid
                      amount: '15'
                      currency: XAF
                      recipient:
                        type: object
                        properties:
                          type: MMO
                          accountDetails:
                            type: object
                            properties:
                              provider: MTN_MOMO_COG
                              phoneNumber: 24206XXXXXX
              example:
                success: true
                data:
                  payoutId: uuid
                  amount: '15'
                  currency: XAF
                  recipient:
                    type: MMO
                    accountDetails:
                      provider: MTN_MOMO_COG
                      phoneNumber: 24206XXXXXX
          description: Returns **200** (OK) as **application/json**
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: false
                  error: Payout request failed
                  details: Unknown error
              example:
                success: false
                error: Payout request failed
                details: Unknown error
          description: Returns **500** (Internal Server Error) as **application/json**
      security: []
  /v3/pawapay/refunds/request:
    post:
      summary: Request refund (requestRefund)
      description: |-
        Request a refund using PawaPay v2 payload

         _app/controllers/pawapay_controller.ts_ - **requestRefund**
      parameters: []
      tags:
        - PAWAPAY
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: true
                  data:
                    type: object
                    properties:
                      refundId: uuid
                      amount: '15'
                      currency: XAF
                      recipient:
                        type: object
                        properties:
                          type: MMO
                          accountDetails:
                            type: object
                            properties:
                              provider: MTN_MOMO_COG
                              phoneNumber: 24206XXXXXX
              example:
                success: true
                data:
                  refundId: uuid
                  amount: '15'
                  currency: XAF
                  recipient:
                    type: MMO
                    accountDetails:
                      provider: MTN_MOMO_COG
                      phoneNumber: 24206XXXXXX
          description: Returns **200** (OK) as **application/json**
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: false
                  error: Refund request failed
                  details: Unknown error
              example:
                success: false
                error: Refund request failed
                details: Unknown error
          description: Returns **500** (Internal Server Error) as **application/json**
      security: []
  /v3/pawapay/refunds/{refundId}/status:
    get:
      summary: Check refund status (checkRefundStatus)
      description: |-
        Returns **200** (OK) as **application/json**

         _app/controllers/pawapay_controller.ts_ - **checkRefundStatus**
      parameters:
        - in: path
          name: refundId
          schema:
            type: string
          required: true
      tags:
        - PAWAPAY
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: true
                  data:
                    type: object
                    properties:
                      refundId: uuid
                      amount: '15'
                      currency: XAF
                      recipient:
                        type: object
                        properties:
                          type: MMO
                          accountDetails:
                            type: object
                            properties:
                              provider: MTN_MOMO_COG
                              phoneNumber: 24206XXXXXX
              example:
                success: true
                data:
                  refundId: uuid
                  amount: '15'
                  currency: XAF
                  recipient:
                    type: MMO
                    accountDetails:
                      provider: MTN_MOMO_COG
                      phoneNumber: 24206XXXXXX
          description: Returns **200** (OK) as **application/json**
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: false
                  error: Refund request failed
                  details: Unknown error
              example:
                success: false
                error: Refund request failed
                details: Unknown error
          description: Returns **500** (Internal Server Error) as **application/json**
      security: []
  /v3/pawapay/callbacks/deposits:
    post:
      summary: Deposit callback (depositCallback)
      description: |-
        Handle deposit callback from PawaPay

         _app/controllers/pawapay_controller.ts_ - **depositCallback**
      parameters: []
      tags:
        - PAWAPAY
      responses:
        '200':
          content:
            text/plain:
              example: '{"received": true, "id": docId, "depositId": depositId, "status": "COMPLETED" | "FAILED" | "PROCESSING"}'
          description: Returns **200** (OK) as **text/plain**
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: false
                  error: Deposit callback failed
                  details: Unknown error
              example:
                success: false
                error: Deposit callback failed
                details: Unknown error
          description: Returns **500** (Internal Server Error) as **application/json**
      security: []
  /v3/pawapay/callbacks/payouts:
    post:
      summary: ' (payoutCallback)'
      description: |-
        Payout callback from PawaPay

         _app/controllers/pawapay_controller.ts_ - **payoutCallback**
      parameters: []
      tags:
        - PAWAPAY
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  received: true
              example:
                received: true
          description: Returns **200** (OK) as **application/json**
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: false
                  error: Payout callback failed
                  details: Unknown error
              example:
                success: false
                error: Payout callback failed
                details: Unknown error
          description: Returns **500** (Internal Server Error) as **application/json**
      security: []
  /v3/pawapay/callbacks/refunds:
    post:
      summary: Refund callback (refundCallback)
      description: |-
        Handle refund callback from PawaPay

         _app/controllers/pawapay_controller.ts_ - **refundCallback**
      parameters: []
      tags:
        - PAWAPAY
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  received: true
              example:
                received: true
          description: Returns **200** (OK) as **application/json**
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: false
                  error: Refund callback failed
                  details: Unknown error
              example:
                success: false
                error: Refund callback failed
                details: Unknown error
          description: Returns **500** (Internal Server Error) as **application/json**
      security: []
x-scalar:
  ui:
    theme:
      primaryColor: '#2563eb'
      secondaryColor: '#64748b'
      backgroundColor: '#ffffff'
      textColor: '#1f2937'
    navigation:
      showServers: true
      showSecurity: true
      showExamples: true
      showResponses: true
    examples:
      showRequestExamples: true
      showResponseExamples: true
      defaultLanguage: curl
    documentation:
      showDescription: true
      showContact: true
      showLicense: true
      showTermsOfService: true
  features:
    auth:
      enabled: true
      persistAuthorization: true
      showSecuritySchemes: true
    testing:
      enabled: true
      allowCustomHeaders: true
      allowCustomBody: true
    docs:
      enabled: true
      showCodeSamples: true
      showSchemaExamples: true
    analytics:
      enabled: true
      trackUsage: true
      trackErrors: true
  webhooks:
    enabled: true
    allowCustomWebhooks: true
    defaultTimeout: 30000
  codeSamples:
    languages:
      - curl
      - javascript
      - python
      - php
      - java
      - csharp
    defaultLanguage: curl
    showLineNumbers: true
    showCopyButton: true
  responses:
    showSchema: true
    showExamples: true
    showHeaders: true
    showStatusCodes: true
  search:
    enabled: true
    searchInDescriptions: true
    searchInExamples: true
    searchInSchemas: true
  metadata:
    showVersion: true
    showLastModified: true
    showGeneratedBy: true
    generatedBy: API Fournisseur CG - AutoSwagger + Scalar
    generatedAt: '2025-10-04T23:59:27.307Z'
